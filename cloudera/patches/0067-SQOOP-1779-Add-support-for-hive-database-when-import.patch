From a0976a857806e98aa80f36241fa3c365155fb2c5 Mon Sep 17 00:00:00 2001
From: Jarek Jarcec Cecho <jarcec@apache.org>
Date: Sat, 22 Nov 2014 14:36:11 -0800
Subject: [PATCH 067/101] SQOOP-1779: Add support for --hive-database when importing Parquet files into Hive

(Josh Wills via Jarek Jarcec Cecho)
---
 .../sqoop/mapreduce/DataDrivenImportJob.java       |   21 +++++++++++++------
 1 files changed, 14 insertions(+), 7 deletions(-)

diff --git a/src/java/org/apache/sqoop/mapreduce/DataDrivenImportJob.java b/src/java/org/apache/sqoop/mapreduce/DataDrivenImportJob.java
index 71abeeb..708da5b 100644
--- a/src/java/org/apache/sqoop/mapreduce/DataDrivenImportJob.java
+++ b/src/java/org/apache/sqoop/mapreduce/DataDrivenImportJob.java
@@ -102,19 +102,26 @@ protected void configureMapper(Job job, String tableName,
       // An Avro schema is required for creating a dataset that manages
       // Parquet data records. The import will fail, if schema is invalid.
       Schema schema = generateAvroSchema(tableName);
-      String uri;
-      if (options.doHiveImport()) {
-        uri = "dataset:hive?dataset=" + options.getHiveTableName();
-      } else {
-        FileSystem fs = FileSystem.get(conf);
-        uri = "dataset:" + fs.makeQualified(getContext().getDestination());
-      }
+      String uri = getKiteUri(conf, tableName);
       ParquetJob.configureImportJob(conf, schema, uri, options.isAppendMode());
     }
 
     job.setMapperClass(getMapperClass());
   }
 
+  private String getKiteUri(Configuration conf, String tableName) throws IOException {
+    if (options.doHiveImport()) {
+      String hiveDatabase = options.getHiveDatabaseName() == null ? "default" :
+          options.getHiveDatabaseName();
+      String hiveTable = options.getHiveTableName() == null ? tableName :
+          options.getHiveTableName();
+      return String.format("dataset:hive:/%s/%s", hiveDatabase, hiveTable);
+    } else {
+      FileSystem fs = FileSystem.get(conf);
+      return "dataset:" + fs.makeQualified(getContext().getDestination());
+    }
+  }
+
   private Schema generateAvroSchema(String tableName) throws IOException {
     ConnManager connManager = getContext().getConnManager();
     AvroSchemaGenerator generator = new AvroSchemaGenerator(options,
-- 
1.7.0.4

